{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\react-app\\\\src\\\\pages\\\\Alarm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Nav from './Nav';\nimport AlarmHead from './AlarmHead';\nimport AlarmRead from './AlarmRead';\nimport AlarmCreate from './AlarmCreate';\nimport AlarmUpdate from './AlarmUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Alarm() {\n  _s();\n  //알람 울릴 시간 세팅\n  const [ringTimeHour, setRingTimeHour] = useState(null);\n  const [ringTimeMin, setRingTimeMin] = useState(null);\n  const [ringMemo, setRingMemo] = useState(null);\n\n  //Read컴포넌트로부터 첫번째 리스트 시간정보 받아오기\n  function getRingTime(hour, min, memo) {\n    if (hour === false && min === false && memo === false) {\n      return false;\n    } else {\n      setRingTimeHour(Number(hour));\n      setRingTimeMin(Number(min));\n      setRingMemo(memo);\n    }\n  }\n\n  //CRUD모드 세팅\n  const [mode, setMode] = useState('READ');\n  const [getRead, setRead] = useState([]);\n  function goData(data) {\n    setRead(data);\n  }\n  let content = null;\n  if (mode === 'READ') {\n    content = /*#__PURE__*/_jsxDEV(AlarmRead, {\n      goCreate: () => {\n        setMode('CREATE');\n      },\n      goUpdate: () => {\n        setMode(\"UPDATE\");\n      },\n      goData: fromRead => {\n        goData(fromRead);\n      },\n      getRingTime: (hour, min, memo) => {\n        getRingTime(hour, min, memo);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else if (mode === 'CREATE') {\n    content = /*#__PURE__*/_jsxDEV(AlarmCreate, {\n      goRead: () => {\n        setMode(\"READ\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  } else if (mode === 'UPDATE') {\n    content = /*#__PURE__*/_jsxDEV(AlarmUpdate, {\n      upData: getRead,\n      goRead: () => {\n        setMode(\"READ\");\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(AlarmHead, {\n        ringHour: ringTimeHour,\n        ringMin: ringTimeMin,\n        ringMemo: ringMemo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Alarm, \"wwq+fNX3FUbhTdCPEzK4hVmhMXs=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useEffect","useState","Nav","AlarmHead","AlarmRead","AlarmCreate","AlarmUpdate","Alarm","ringTimeHour","setRingTimeHour","ringTimeMin","setRingTimeMin","ringMemo","setRingMemo","getRingTime","hour","min","memo","Number","mode","setMode","getRead","setRead","goData","data","content","fromRead"],"sources":["D:/PROJECTS/react-app/src/pages/Alarm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nimport Nav from './Nav';\r\nimport AlarmHead from './AlarmHead';\r\nimport AlarmRead from './AlarmRead';\r\nimport AlarmCreate from './AlarmCreate';\r\nimport AlarmUpdate from './AlarmUpdate';\r\n\r\nfunction Alarm() {\r\n\r\n\t//알람 울릴 시간 세팅\r\n\tconst [ringTimeHour, setRingTimeHour] = useState(null);\r\n\tconst [ringTimeMin, setRingTimeMin] = useState(null);\r\n\tconst [ringMemo, setRingMemo] = useState(null);\r\n\r\n\t//Read컴포넌트로부터 첫번째 리스트 시간정보 받아오기\r\n\tfunction getRingTime(hour, min, memo) {\r\n\t\tif (hour === false && min === false && memo === false) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tsetRingTimeHour(Number(hour));\r\n\t\t\tsetRingTimeMin(Number(min));\r\n\t\t\tsetRingMemo(memo);\r\n\t\t}\r\n\t}\r\n\r\n\t//CRUD모드 세팅\r\n\tconst [mode, setMode] = useState('READ');\r\n\tconst [getRead, setRead] = useState([]);\r\n\tfunction goData(data) {\r\n\t\tsetRead(data);\r\n\t}\r\n\r\n\r\n\tlet content = null;\r\n\r\n\tif (mode === 'READ') {\r\n\t\tcontent = <AlarmRead goCreate={() => { setMode('CREATE') }}\r\n\t\t\tgoUpdate={() => { setMode(\"UPDATE\"); }}\r\n\t\t\tgoData={(fromRead) => { goData(fromRead); }}\r\n\t\t\tgetRingTime={(hour, min, memo) => { getRingTime(hour, min, memo) }}\r\n\t\t/>\r\n\t}\r\n\telse if (mode === 'CREATE') {\r\n\t\tcontent = <AlarmCreate goRead={() => { setMode(\"READ\"); }} />\r\n\t}\r\n\telse if (mode === 'UPDATE') {\r\n\t\tcontent = <AlarmUpdate upData={getRead} goRead={() => { setMode(\"READ\") }} />\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Nav></Nav>\r\n\t\t\t<article className=\"contents\">\r\n\t\t\t\t<AlarmHead ringHour={ringTimeHour} ringMin={ringTimeMin} ringMemo={ringMemo} />\r\n\t\t\t\t{content}\r\n\t\t\t</article>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Alarm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAExC,SAASC,KAAK,GAAG;EAAA;EAEhB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,SAASa,WAAW,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAE;IACrC,IAAIF,IAAI,KAAK,KAAK,IAAIC,GAAG,KAAK,KAAK,IAAIC,IAAI,KAAK,KAAK,EAAE;MACtD,OAAO,KAAK;IACb,CAAC,MAAM;MACNR,eAAe,CAACS,MAAM,CAACH,IAAI,CAAC,CAAC;MAC7BJ,cAAc,CAACO,MAAM,CAACF,GAAG,CAAC,CAAC;MAC3BH,WAAW,CAACI,IAAI,CAAC;IAClB;EACD;;EAEA;EACA,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACoB,OAAO,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACvC,SAASsB,MAAM,CAACC,IAAI,EAAE;IACrBF,OAAO,CAACE,IAAI,CAAC;EACd;EAGA,IAAIC,OAAO,GAAG,IAAI;EAElB,IAAIN,IAAI,KAAK,MAAM,EAAE;IACpBM,OAAO,gBAAG,QAAC,SAAS;MAAC,QAAQ,EAAE,MAAM;QAAEL,OAAO,CAAC,QAAQ,CAAC;MAAC,CAAE;MAC1D,QAAQ,EAAE,MAAM;QAAEA,OAAO,CAAC,QAAQ,CAAC;MAAE,CAAE;MACvC,MAAM,EAAGM,QAAQ,IAAK;QAAEH,MAAM,CAACG,QAAQ,CAAC;MAAE,CAAE;MAC5C,WAAW,EAAE,CAACX,IAAI,EAAEC,GAAG,EAAEC,IAAI,KAAK;QAAEH,WAAW,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,CAAC;MAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAClE;EACH,CAAC,MACI,IAAIE,IAAI,KAAK,QAAQ,EAAE;IAC3BM,OAAO,gBAAG,QAAC,WAAW;MAAC,MAAM,EAAE,MAAM;QAAEL,OAAO,CAAC,MAAM,CAAC;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAC9D,CAAC,MACI,IAAID,IAAI,KAAK,QAAQ,EAAE;IAC3BM,OAAO,gBAAG,QAAC,WAAW;MAAC,MAAM,EAAEJ,OAAQ;MAAC,MAAM,EAAE,MAAM;QAAED,OAAO,CAAC,MAAM,CAAC;MAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAC9E;EACA,oBACC;IAAA,wBACC,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAO,eACX;MAAS,SAAS,EAAC,UAAU;MAAA,wBAC5B,QAAC,SAAS;QAAC,QAAQ,EAAEZ,YAAa;QAAC,OAAO,EAAEE,WAAY;QAAC,QAAQ,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,EAC9Ea,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACR;AAEL;AAAC,GAlDQlB,KAAK;AAAA,KAALA,KAAK;AAoDd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
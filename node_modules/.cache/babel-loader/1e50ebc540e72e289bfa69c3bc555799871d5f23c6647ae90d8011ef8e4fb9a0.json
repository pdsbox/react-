{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\react-app\\\\src\\\\pages\\\\AlarmHead.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport useInterval from '../hooks/useInterval.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AlarmHead(props) {\n  _s();\n  const date = new Date();\n  let hour = date.getHours();\n  let minute = date.getMinutes();\n  let second = date.getSeconds();\n  let day = date.getDate();\n  let month = date.getMonth();\n  let year = date.getFullYear();\n  const [now_hour, setHour] = useState(hour);\n  const [now_min, setMinute] = useState(minute);\n  const [now_second, setSecond] = useState(second);\n  const [now_day, setDay] = useState(day);\n  const [now_month, setMonth] = useState(month + 1);\n  const [now_year, setYear] = useState(year);\n  const ringHour = Number(props.ringHour);\n  const ringMin = Number(props.ringMin);\n  let chkTimeHour = ringHour - now_hour;\n  let chkTimeMin = ringMin === now_min ? 60 - ringMin : ringHour - now_hour;\n  useInterval(() => {\n    const date = new Date();\n    let hour = date.getHours();\n    let minute = date.getMinutes();\n    let second = date.getSeconds();\n    let day = date.getDate();\n    let month = date.getMonth();\n    let year = date.getFullYear();\n    setHour(hour);\n    setMinute(minute);\n    setSecond(second);\n    setDay(day);\n    setMonth(month + 1);\n    setYear(year);\n    const h = now_hour < 10 ? `0${now_hour}` : now_hour;\n    const m = now_min < 10 ? `0${now_min}` : now_min;\n    props.getTime(h, m);\n    props.match();\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"alarmHead\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ALARM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uD604\\uC7AC \\uC2DC\\uAC01 : \", now_year, \".\", now_month, \".\", now_day, \" \", now_hour < 10 ? `0${now_hour}` : now_hour, \":\", now_min < 10 ? `0${now_min}` : now_min, \":\", now_second < 10 ? `0${now_second}` : now_second]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"\\uB2E4\\uC74C \\uC54C\\uB78C : \", chkTimeHour, \"\\uC2DC\\uAC04 \", chkTimeMin, \"\\uBD84 \\uD6C4\\uC5D0 \", props.ringMemo, \"\\uC54C\\uB78C\\uC774 \\uC2E4\\uD589\\uB429\\uB2C8\\uB2E4.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(AlarmHead, \"0AMkiaeHJinTnAh1v8QpUliLOpc=\", false, function () {\n  return [useInterval];\n});\n_c = AlarmHead;\nexport default AlarmHead;\nvar _c;\n$RefreshReg$(_c, \"AlarmHead\");","map":{"version":3,"names":["React","useEffect","useState","useInterval","AlarmHead","props","date","Date","hour","getHours","minute","getMinutes","second","getSeconds","day","getDate","month","getMonth","year","getFullYear","now_hour","setHour","now_min","setMinute","now_second","setSecond","now_day","setDay","now_month","setMonth","now_year","setYear","ringHour","Number","ringMin","chkTimeHour","chkTimeMin","h","m","getTime","match","ringMemo"],"sources":["D:/PROJECTS/react-app/src/pages/AlarmHead.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport useInterval from '../hooks/useInterval.js';\r\n\r\nfunction AlarmHead(props) {\r\n\r\n    const date = new Date();\r\n    let hour = date.getHours();\r\n    let minute = date.getMinutes();\r\n    let second = date.getSeconds();\r\n    let day = date.getDate();\r\n    let month = date.getMonth();\r\n    let year = date.getFullYear();\r\n\r\n    const [now_hour, setHour] = useState(hour);\r\n    const [now_min, setMinute] = useState(minute);\r\n    const [now_second, setSecond] = useState(second);\r\n    const [now_day, setDay] = useState(day);\r\n    const [now_month, setMonth] = useState(month + 1);\r\n    const [now_year, setYear] = useState(year);\r\n\r\n    const ringHour = Number(props.ringHour);\r\n    const ringMin = Number(props.ringMin);\r\n\r\n    let chkTimeHour = ringHour - now_hour;\r\n    let chkTimeMin = ringMin === now_min ? (60 - ringMin) : (ringHour - now_hour);\r\n\r\n    useInterval(() => {\r\n        const date = new Date();\r\n        let hour = date.getHours();\r\n        let minute = date.getMinutes();\r\n        let second = date.getSeconds();\r\n        let day = date.getDate();\r\n        let month = date.getMonth();\r\n        let year = date.getFullYear();\r\n\r\n        setHour(hour);\r\n        setMinute(minute);\r\n        setSecond(second);\r\n        setDay(day);\r\n        setMonth(month + 1);\r\n        setYear(year);\r\n\r\n        const h = now_hour < 10 ? `0${now_hour}` : now_hour;\r\n        const m = now_min < 10 ? `0${now_min}` : now_min;\r\n\r\n        props.getTime(h, m);\r\n        props.match();\r\n\r\n    }, 1000);\r\n\r\n    return (\r\n        <section id=\"alarmHead\">\r\n            <h1>ALARM</h1>\r\n            <h2>현재 시각 : {now_year}.{now_month}.{now_day} {now_hour < 10 ? `0${now_hour}` : now_hour}:{now_min < 10 ? `0${now_min}` : now_min}:{now_second < 10 ? `0${now_second}` : now_second}</h2>\r\n            <h2>다음 알람 : {chkTimeHour}시간 {chkTimeMin}분 후에 {props.ringMemo}알람이 실행됩니다.</h2>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AlarmHead"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
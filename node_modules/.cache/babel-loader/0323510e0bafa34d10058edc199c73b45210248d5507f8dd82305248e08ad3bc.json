{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\react-app\\\\src\\\\pages\\\\Alarm.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport db from '../data/data.json';\nimport useInterval from '../hooks/useInterval';\nimport Nav from './Nav';\nimport AlarmHead from './AlarmHead';\nimport AlarmRead from './AlarmRead';\nimport AlarmCreate from './AlarmCreate';\nimport AlarmUpdate from './AlarmUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Alarm() {\n  _s2();\n  var _s = $RefreshSig$();\n  function ring() {\n    _s();\n    useInterval(() => {}, 1000);\n  }\n  _s(ring, \"pgv8HMpMrAP7yI0t0MhsSmroZ6w=\", false, function () {\n    return [useInterval];\n  });\n  const [mode, setMode] = useState('READ');\n  // const [id, setId] = useState(null);\n  const [nextId, setNextId] = useState(db.alarm === null ? 1 : db.alarm.length);\n  // const [alarm, setAlarm] = useState([\n  // \t{ id: 1, memo: '기상', hour: '07시', min: '30분' },\n  // \t{ id: 2, memo: '아침먹기', hour: '08시', min: '15분' }\n  // ]);\n  const [getRead, setRead] = useState([]);\n  function goData(data) {\n    setRead(data);\n  }\n  let content = null;\n  if (mode === 'READ') {\n    content = /*#__PURE__*/_jsxDEV(AlarmRead, {\n      goCreate: () => {\n        setMode('CREATE');\n      },\n      goUpdate: () => {\n        setMode(\"UPDATE\");\n      },\n      goData: fromRead => {\n        goData(fromRead);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  } else if (mode === 'CREATE') {\n    content = /*#__PURE__*/_jsxDEV(AlarmCreate, {\n      goRead: () => {\n        setMode(\"READ\");\n      },\n      onCreate: () => {\n        setNextId(nextId + 1);\n        setMode('READ');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  } else if (mode === 'UPDATE') {\n    content = /*#__PURE__*/_jsxDEV(AlarmUpdate, {\n      upData: getRead,\n      goRead: () => {\n        setMode(\"READ\");\n      },\n      onUpdate: () => {\n        setMode('READ');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"contents\",\n      children: [/*#__PURE__*/_jsxDEV(AlarmHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), content]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s2(Alarm, \"d2trSwH9F4spKfUXudoCgzyMhT8=\");\n_c = Alarm;\nexport default Alarm;\nvar _c;\n$RefreshReg$(_c, \"Alarm\");","map":{"version":3,"names":["React","useEffect","useState","db","useInterval","Nav","AlarmHead","AlarmRead","AlarmCreate","AlarmUpdate","Alarm","ring","mode","setMode","nextId","setNextId","alarm","length","getRead","setRead","goData","data","content","fromRead"],"sources":["D:/PROJECTS/react-app/src/pages/Alarm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport db from '../data/data.json';\r\nimport useInterval from '../hooks/useInterval';\r\n\r\nimport Nav from './Nav';\r\nimport AlarmHead from './AlarmHead';\r\nimport AlarmRead from './AlarmRead';\r\nimport AlarmCreate from './AlarmCreate';\r\nimport AlarmUpdate from './AlarmUpdate';\r\n\r\nfunction Alarm() {\r\n\tfunction ring() {\r\n\t\tuseInterval(() => {\r\n\r\n\t\t}, 1000)\r\n\r\n\t}\r\n\r\n\tconst [mode, setMode] = useState('READ');\r\n\t// const [id, setId] = useState(null);\r\n\tconst [nextId, setNextId] = useState(db.alarm === null ? 1 : db.alarm.length);\r\n\t// const [alarm, setAlarm] = useState([\r\n\t// \t{ id: 1, memo: '기상', hour: '07시', min: '30분' },\r\n\t// \t{ id: 2, memo: '아침먹기', hour: '08시', min: '15분' }\r\n\t// ]);\r\n\tconst [getRead, setRead] = useState([]);\r\n\tfunction goData(data) {\r\n\t\tsetRead(data);\r\n\t}\r\n\tlet content = null;\r\n\r\n\tif (mode === 'READ') {\r\n\t\tcontent = <AlarmRead goCreate={() => { setMode('CREATE') }}\r\n\t\t\tgoUpdate={() => { setMode(\"UPDATE\"); }}\r\n\t\t\tgoData={(fromRead) => { goData(fromRead); }}></AlarmRead >\r\n\t}\r\n\telse if (mode === 'CREATE') {\r\n\t\tcontent = <AlarmCreate\r\n\t\t\tgoRead={() => { setMode(\"READ\"); }}\r\n\t\t\tonCreate={() => {\r\n\t\t\t\tsetNextId(nextId + 1);\r\n\t\t\t\tsetMode('READ');\r\n\t\t\t}}></AlarmCreate>\r\n\t}\r\n\telse if (mode === 'UPDATE') {\r\n\t\tcontent = <AlarmUpdate upData={getRead} goRead={() => { setMode(\"READ\") }} onUpdate={() => { setMode('READ') }} ></AlarmUpdate>\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Nav></Nav>\r\n\t\t\t<article className=\"contents\">\r\n\t\t\t\t<AlarmHead></AlarmHead>\r\n\t\t\t\t{content}\r\n\t\t\t</article>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Alarm"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,mBAAmB;AAClC,OAAOC,WAAW,MAAM,sBAAsB;AAE9C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC;AAAA;AAExC,SAASC,KAAK,GAAG;EAAA;EAAA;EAChB,SAASC,IAAI,GAAG;IAAA;IACfP,WAAW,CAAC,MAAM,CAElB,CAAC,EAAE,IAAI,CAAC;EAET;EAAC,GALQO,IAAI;IAAA,QACZP,WAAW;EAAA;EAMZ,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,MAAM,CAAC;EACxC;EACA,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAACC,EAAE,CAACa,KAAK,KAAK,IAAI,GAAG,CAAC,GAAGb,EAAE,CAACa,KAAK,CAACC,MAAM,CAAC;EAC7E;EACA;EACA;EACA;EACA,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACvC,SAASkB,MAAM,CAACC,IAAI,EAAE;IACrBF,OAAO,CAACE,IAAI,CAAC;EACd;EACA,IAAIC,OAAO,GAAG,IAAI;EAElB,IAAIV,IAAI,KAAK,MAAM,EAAE;IACpBU,OAAO,gBAAG,QAAC,SAAS;MAAC,QAAQ,EAAE,MAAM;QAAET,OAAO,CAAC,QAAQ,CAAC;MAAC,CAAE;MAC1D,QAAQ,EAAE,MAAM;QAAEA,OAAO,CAAC,QAAQ,CAAC;MAAE,CAAE;MACvC,MAAM,EAAGU,QAAQ,IAAK;QAAEH,MAAM,CAACG,QAAQ,CAAC;MAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAc;EAC5D,CAAC,MACI,IAAIX,IAAI,KAAK,QAAQ,EAAE;IAC3BU,OAAO,gBAAG,QAAC,WAAW;MACrB,MAAM,EAAE,MAAM;QAAET,OAAO,CAAC,MAAM,CAAC;MAAE,CAAE;MACnC,QAAQ,EAAE,MAAM;QACfE,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;QACrBD,OAAO,CAAC,MAAM,CAAC;MAChB;IAAE;MAAA;MAAA;MAAA;IAAA,QAAe;EACnB,CAAC,MACI,IAAID,IAAI,KAAK,QAAQ,EAAE;IAC3BU,OAAO,gBAAG,QAAC,WAAW;MAAC,MAAM,EAAEJ,OAAQ;MAAC,MAAM,EAAE,MAAM;QAAEL,OAAO,CAAC,MAAM,CAAC;MAAC,CAAE;MAAC,QAAQ,EAAE,MAAM;QAAEA,OAAO,CAAC,MAAM,CAAC;MAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAgB;EAChI;EACA,oBACC;IAAA,wBACC,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAO,eACX;MAAS,SAAS,EAAC,UAAU;MAAA,wBAC5B,QAAC,SAAS;QAAA;QAAA;QAAA;MAAA,QAAa,EACtBS,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACC;EAAA,gBACR;AAEL;AAAC,IA9CQZ,KAAK;AAAA,KAALA,KAAK;AAgDd,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
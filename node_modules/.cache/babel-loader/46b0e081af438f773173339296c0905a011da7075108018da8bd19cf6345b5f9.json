{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\react-app\\\\src\\\\pages\\\\StopWatchTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport useInterval from '../hooks/useInterval';\nimport Button from './TimerButton';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimerStopWatch() {\n  _s();\n  const [timerHour, setTimerHour] = useState(0);\n  const [timerMin, setTimerMin] = useState(0);\n  const [timerSec, setTimerSec] = useState(0);\n  const [timerMilSec, setTimerMilSec] = useState(0);\n  const [termHour, setTermHour] = useState(0);\n  const [termMin, setTermMin] = useState(0);\n  const [termSec, setTermSec] = useState(0);\n  const [termMilSec, setTermMilSec] = useState(0);\n  const [timeCheckList, setTimeCheckList] = useState([]);\n\n  //타이머 실행 스위치 ON / OFF\n  const [intervalMode, setIntervalMode] = useState(\"OFF\");\n  //텀 타이머 실행 스위치 ON / OFF\n  const [termIntervalMode, setTermIntervalMode] = useState(\"OFF\");\n  //텀 타이머 초기화 세팅\n  const [termInit, setTermInit] = useState(true);\n\n  //서버로 보낼 데이터 임시저장\n  const [stopWatch, setStopWatch] = useState([]);\n\n  //포스트 상태\n  const [postStatus, setPostStatus] = useState(false);\n\n  //메인 타이머 인터벌\n  useInterval(() => {\n    if (intervalMode === \"ON\") {\n      timer();\n    } else if (intervalMode === \"OFF\") {}\n  }, 10);\n\n  //텀 타이머 인터벌\n  useInterval(() => {\n    if (termIntervalMode === \"ON\") {\n      termTimer();\n    } else if (termIntervalMode === \"OFF\") {}\n  }, 10);\n\n  //메인 타이머 로직\n  function timer() {\n    setTimerMilSec(timerMilSec + 1);\n    if (timerMilSec === 99) {\n      setTimerMilSec(0);\n      setTimerSec(timerSec + 1);\n    }\n    if (timerSec === 60) {\n      setTimerSec(0);\n      setTimerMin(timerMin + 1);\n    }\n    if (timerMin === 60) {\n      setTimerMin(0);\n      setTimerHour(timerHour + 1);\n    }\n  }\n\n  //텀 타이머 로직\n  function termTimer() {\n    setTermMilSec(termMilSec + 1);\n    if (termMilSec === 99) {\n      setTermMilSec(0);\n      setTermSec(termSec + 1);\n    }\n    if (termSec === 60) {\n      setTermSec(0);\n      setTermMin(termMin + 1);\n    }\n    if (termMin === 60) {\n      setTermMin(0);\n      setTermHour(termHour + 1);\n    }\n  }\n\n  //메인 타이머 VIEW\n  let timeView = timerHour > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [timerHour < 10 ? `0${timerHour}` : timerHour, \" :\", timerMin < 10 ? `0${timerMin}` : timerMin, \" :\", timerSec < 10 ? `0${timerSec}` : timerSec, \" .\", timerMilSec < 10 ? `0${timerMilSec}` : timerMilSec]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [timerMin < 10 ? `0${timerMin}` : timerMin, \" :\", timerSec < 10 ? `0${timerSec}` : timerSec, \" .\", timerMilSec < 10 ? `0${timerMilSec}` : timerMilSec]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n\n  //텀 타이머 VIEW\n  let timeTerm = termHour > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [termHour < 10 ? `0${termHour}` : termHour, \" :\", termMin < 10 ? `0${termMin}` : termMin, \" :\", termSec < 10 ? `0${termSec}` : termSec, \" .\", termMilSec < 10 ? `0${termMilSec}` : termMilSec]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [termMin < 10 ? `0${termMin}` : termMin, \" :\", termSec < 10 ? `0${termSec}` : termSec, \" .\", termMilSec < 10 ? `0${termMilSec}` : termMilSec]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n\n  //타이머 체커 이벤트. 체크버튼 누르면 시간값이 기록된 리스트 추가\n  function timeCheckEvent() {\n    setTimeCheckList(timeCheckList => {\n      return [...timeCheckList, /*#__PURE__*/_jsxDEV(\"li\", {\n        className: (timeCheckList.length + 1) % 10 === 0 ? 'red' : (timeCheckList.length + 1) % 5 === 0 ? 'blue' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"number\",\n          children: timeCheckList.length + 1 < 10 ? `0${timeCheckList.length + 1}` : timeCheckList.length + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"term\",\n          children: timeTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: timeView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, timeCheckList.length + 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)];\n    });\n  }\n  // function postStandBy() {\n  //     setStopWatch((stopWatch) => {\n  //         return [...stopWatch, {\n  //             id: timeCheckList.length + 1,\n  //             key: timeCheckList.length + 1,\n  //             termHour: termHour,\n  //             termMin: termMin,\n  //             termSec: termSec,\n  //             termMilSec: termMilSec,\n  //             totalHour: timerHour,\n  //             totalMin: timerMin,\n  //             totalSec: timerSec,\n  //             totalMilSec: timerMilSec\n  //         }]\n  //     });\n  // }\n  // console.log(\"임시저장\", stopWatch)\n\n  function postData() {\n    if (postStatus === false) {\n      fetch('http://localhost:3001/stopwatch', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: timeCheckList.length + 1,\n          key: timeCheckList.length + 1,\n          termHour: termHour,\n          termMin: termMin,\n          termSec: termSec,\n          termMilSec: termMilSec,\n          totalHour: timerHour,\n          totalMin: timerMin,\n          totalSec: timerSec,\n          totalMilSec: timerMilSec\n        })\n      }).then(res => {\n        if (res.ok) {\n          console.log(\"POST\");\n          setPostStatus(true);\n        }\n      });\n    } else if (postStatus === true) {\n      deleteData();\n      fetch('http://localhost:3001/stopwatch', {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: timeCheckList.length + 1,\n          key: timeCheckList.length + 1,\n          termHour: termHour,\n          termMin: termMin,\n          termSec: termSec,\n          termMilSec: termMilSec,\n          totalHour: timerHour,\n          totalMin: timerMin,\n          totalSec: timerSec,\n          totalMilSec: timerMilSec\n        })\n      }).then(res => {\n        if (res.ok) {\n          console.log(\"PUT\");\n        }\n      });\n    }\n  }\n  function deleteData() {\n    fetch('http://localhost:3001/stopwatch', {\n      method: \"DELETE\"\n    });\n  }\n\n  //체크 이벤트 소트(내림차순)\n  const timeCheck = timeCheckList.sort((a, b) => {\n    return b.key - a.key;\n  });\n\n  //리셋 버튼 이벤트\n  function btnReset() {\n    setTimerHour(0);\n    setTimerMin(0);\n    setTimerSec(0);\n    setTimerMilSec(0);\n    setTimeCheckList([]);\n    btnTermTimeReset();\n    setTermInit(true);\n    console.log(\"Reset\");\n  }\n  //스타트 버튼 이벤트\n  function btnStart() {\n    setIntervalMode(\"ON\");\n    setTermIntervalMode(\"ON\");\n    console.log(\"Start\");\n  }\n  //체크 버튼 이벤트\n  function btnCheck() {\n    btnTermTimeReset();\n    setTermIntervalMode(\"ON\");\n    timeCheckEvent();\n    setTermInit(false);\n    postData();\n    // postStandBy();\n    console.log(\"Check\");\n  }\n  //스탑 버튼 이벤트\n  function btnStop() {\n    setIntervalMode(\"OFF\");\n    setTermIntervalMode(\"OFF\");\n    console.log(\"Stop\");\n  }\n  //기록 버튼 이벤트\n  function btnRecord() {}\n\n  //텀 타이머값 초기화 함수\n  function btnTermTimeReset() {\n    setTermHour(0);\n    setTermMin(0);\n    setTermSec(0);\n    setTermMilSec(0);\n  }\n\n  //버튼그룹 VIEW\n  let buttonGroup = null;\n  if (intervalMode === \"OFF\") {\n    buttonGroup = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        value: \"RESET\",\n        clickEvent: () => {\n          btnReset();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"START\",\n        clickEvent: () => {\n          btnStart();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  } else if (intervalMode === \"ON\") {\n    buttonGroup = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        value: \"CHECK\",\n        clickEvent: () => {\n          btnCheck();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"STOP\",\n        clickEvent: () => {\n          btnStop();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"watch\",\n      className: termInit === true ? 'watchInit' : 'started',\n      children: timeView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      id: \"subWatch\",\n      className: termInit === true ? 'checkerInit' : 'started',\n      children: timeTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hgroup\", {\n      id: \"chkTitle\",\n      className: termInit === true ? 'titleInit' : 'started flex',\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"kr\",\n        children: \"\\uAD6C\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"kr\",\n        children: \"\\uAD6C\\uAC04\\uAE30\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"kr\",\n        children: \"\\uC804\\uCCB4\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"timeCheck\",\n      className: termInit === true ? 'checkerInit' : 'started',\n      children: timeCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btnGroup\",\n      children: buttonGroup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, this);\n}\n_s(TimerStopWatch, \"7qa99ooiz4NHIl/t1cYlUV5tiXU=\", false, function () {\n  return [useInterval, useInterval];\n});\n_c = TimerStopWatch;\nexport default TimerStopWatch;\nvar _c;\n$RefreshReg$(_c, \"TimerStopWatch\");","map":{"version":3,"names":["React","useState","useInterval","Button","TimerStopWatch","timerHour","setTimerHour","timerMin","setTimerMin","timerSec","setTimerSec","timerMilSec","setTimerMilSec","termHour","setTermHour","termMin","setTermMin","termSec","setTermSec","termMilSec","setTermMilSec","timeCheckList","setTimeCheckList","intervalMode","setIntervalMode","termIntervalMode","setTermIntervalMode","termInit","setTermInit","stopWatch","setStopWatch","postStatus","setPostStatus","timer","termTimer","timeView","timeTerm","timeCheckEvent","length","postData","fetch","method","headers","body","JSON","stringify","id","key","totalHour","totalMin","totalSec","totalMilSec","then","res","ok","console","log","deleteData","timeCheck","sort","a","b","btnReset","btnTermTimeReset","btnStart","btnCheck","btnStop","btnRecord","buttonGroup"],"sources":["D:/PROJECTS/react-app/src/pages/StopWatchTimer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport useInterval from '../hooks/useInterval';\r\nimport Button from './TimerButton';\r\n\r\nfunction TimerStopWatch() {\r\n    const [timerHour, setTimerHour] = useState(0);\r\n    const [timerMin, setTimerMin] = useState(0);\r\n    const [timerSec, setTimerSec] = useState(0);\r\n    const [timerMilSec, setTimerMilSec] = useState(0);\r\n\r\n    const [termHour, setTermHour] = useState(0);\r\n    const [termMin, setTermMin] = useState(0);\r\n    const [termSec, setTermSec] = useState(0);\r\n    const [termMilSec, setTermMilSec] = useState(0);\r\n\r\n    const [timeCheckList, setTimeCheckList] = useState([]);\r\n\r\n    //타이머 실행 스위치 ON / OFF\r\n    const [intervalMode, setIntervalMode] = useState(\"OFF\");\r\n    //텀 타이머 실행 스위치 ON / OFF\r\n    const [termIntervalMode, setTermIntervalMode] = useState(\"OFF\");\r\n    //텀 타이머 초기화 세팅\r\n    const [termInit, setTermInit] = useState(true);\r\n\r\n    //서버로 보낼 데이터 임시저장\r\n    const [stopWatch, setStopWatch] = useState([]);\r\n\r\n    //포스트 상태\r\n    const [postStatus, setPostStatus] = useState(false);\r\n\r\n    //메인 타이머 인터벌\r\n    useInterval(() => {\r\n        if (intervalMode === \"ON\") {\r\n            timer();\r\n        } else if (intervalMode === \"OFF\") {\r\n        }\r\n    }, 10);\r\n\r\n    //텀 타이머 인터벌\r\n    useInterval(() => {\r\n        if (termIntervalMode === \"ON\") {\r\n            termTimer();\r\n        } else if (termIntervalMode === \"OFF\") {\r\n\r\n        }\r\n    }, 10)\r\n\r\n    //메인 타이머 로직\r\n    function timer() {\r\n        setTimerMilSec(timerMilSec + 1);\r\n        if (timerMilSec === 99) {\r\n            setTimerMilSec(0);\r\n            setTimerSec(timerSec + 1);\r\n        }\r\n        if (timerSec === 60) {\r\n            setTimerSec(0);\r\n            setTimerMin(timerMin + 1);\r\n        }\r\n        if (timerMin === 60) {\r\n            setTimerMin(0);\r\n            setTimerHour(timerHour + 1);\r\n        }\r\n\r\n    }\r\n\r\n    //텀 타이머 로직\r\n    function termTimer() {\r\n        setTermMilSec(termMilSec + 1);\r\n        if (termMilSec === 99) {\r\n            setTermMilSec(0);\r\n            setTermSec(termSec + 1);\r\n        }\r\n        if (termSec === 60) {\r\n            setTermSec(0);\r\n            setTermMin(termMin + 1);\r\n        }\r\n        if (termMin === 60) {\r\n            setTermMin(0);\r\n            setTermHour(termHour + 1);\r\n        }\r\n\r\n    }\r\n\r\n    //메인 타이머 VIEW\r\n    let timeView = timerHour > 0 ?\r\n        <>\r\n            <span>\r\n                {timerHour < 10 ? `0${timerHour}` : timerHour} :\r\n                {timerMin < 10 ? `0${timerMin}` : timerMin} :\r\n                {timerSec < 10 ? `0${timerSec}` : timerSec} .\r\n                {timerMilSec < 10 ? `0${timerMilSec}` : timerMilSec}\r\n            </span>\r\n        </>\r\n        :\r\n        <>\r\n            <span>\r\n                {timerMin < 10 ? `0${timerMin}` : timerMin} :\r\n                {timerSec < 10 ? `0${timerSec}` : timerSec} .\r\n                {timerMilSec < 10 ? `0${timerMilSec}` : timerMilSec}\r\n            </span>\r\n        </>\r\n        ;\r\n\r\n    //텀 타이머 VIEW\r\n    let timeTerm = termHour > 0 ?\r\n        <>\r\n            <span>\r\n                {termHour < 10 ? `0${termHour}` : termHour} :\r\n                {termMin < 10 ? `0${termMin}` : termMin} :\r\n                {termSec < 10 ? `0${termSec}` : termSec} .\r\n                {termMilSec < 10 ? `0${termMilSec}` : termMilSec}\r\n            </span>\r\n        </>\r\n        :\r\n        <>\r\n            <span>\r\n                {termMin < 10 ? `0${termMin}` : termMin} :\r\n                {termSec < 10 ? `0${termSec}` : termSec} .\r\n                {termMilSec < 10 ? `0${termMilSec}` : termMilSec}\r\n            </span>\r\n        </>\r\n        ;\r\n\r\n    //타이머 체커 이벤트. 체크버튼 누르면 시간값이 기록된 리스트 추가\r\n    function timeCheckEvent() {\r\n        setTimeCheckList((timeCheckList) => {\r\n            return [...timeCheckList,\r\n            <li key={timeCheckList.length + 1} className={((timeCheckList.length + 1) % 10) === 0 ? 'red' : ((timeCheckList.length + 1) % 5) === 0 ? 'blue' : ''}>\r\n                <div className='number'>{(timeCheckList.length + 1) < 10 ? `0${timeCheckList.length + 1}` : (timeCheckList.length + 1)}</div>\r\n                <div className='term'>{timeTerm}</div>\r\n                <div className='total'>{timeView}</div>\r\n            </li>\r\n            ];\r\n        })\r\n    }\r\n    // function postStandBy() {\r\n    //     setStopWatch((stopWatch) => {\r\n    //         return [...stopWatch, {\r\n    //             id: timeCheckList.length + 1,\r\n    //             key: timeCheckList.length + 1,\r\n    //             termHour: termHour,\r\n    //             termMin: termMin,\r\n    //             termSec: termSec,\r\n    //             termMilSec: termMilSec,\r\n    //             totalHour: timerHour,\r\n    //             totalMin: timerMin,\r\n    //             totalSec: timerSec,\r\n    //             totalMilSec: timerMilSec\r\n    //         }]\r\n    //     });\r\n    // }\r\n    // console.log(\"임시저장\", stopWatch)\r\n\r\n    function postData() {\r\n        if (postStatus === false) {\r\n            fetch('http://localhost:3001/stopwatch', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    id: timeCheckList.length + 1,\r\n                    key: timeCheckList.length + 1,\r\n                    termHour: termHour,\r\n                    termMin: termMin,\r\n                    termSec: termSec,\r\n                    termMilSec: termMilSec,\r\n                    totalHour: timerHour,\r\n                    totalMin: timerMin,\r\n                    totalSec: timerSec,\r\n                    totalMilSec: timerMilSec\r\n                }),\r\n            }).then((res) => {\r\n                if (res.ok) {\r\n                    console.log(\"POST\")\r\n                    setPostStatus(true);\r\n                }\r\n            })\r\n        } else if (postStatus === true) {\r\n            deleteData();\r\n            fetch('http://localhost:3001/stopwatch', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    id: timeCheckList.length + 1,\r\n                    key: timeCheckList.length + 1,\r\n                    termHour: termHour,\r\n                    termMin: termMin,\r\n                    termSec: termSec,\r\n                    termMilSec: termMilSec,\r\n                    totalHour: timerHour,\r\n                    totalMin: timerMin,\r\n                    totalSec: timerSec,\r\n                    totalMilSec: timerMilSec\r\n                }),\r\n            }).then((res) => {\r\n                if (res.ok) {\r\n                    console.log(\"PUT\")\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    function deleteData() {\r\n        fetch('http://localhost:3001/stopwatch', {\r\n            method: \"DELETE\",\r\n        })\r\n    }\r\n\r\n    //체크 이벤트 소트(내림차순)\r\n    const timeCheck = timeCheckList.sort((a, b) => {\r\n        return b.key - a.key;\r\n    })\r\n\r\n    //리셋 버튼 이벤트\r\n    function btnReset() {\r\n        setTimerHour(0);\r\n        setTimerMin(0);\r\n        setTimerSec(0);\r\n        setTimerMilSec(0);\r\n        setTimeCheckList([]);\r\n        btnTermTimeReset();\r\n        setTermInit(true);\r\n        console.log(\"Reset\");\r\n    }\r\n    //스타트 버튼 이벤트\r\n    function btnStart() {\r\n        setIntervalMode(\"ON\");\r\n        setTermIntervalMode(\"ON\");\r\n        console.log(\"Start\");\r\n    }\r\n    //체크 버튼 이벤트\r\n    function btnCheck() {\r\n        btnTermTimeReset();\r\n        setTermIntervalMode(\"ON\");\r\n        timeCheckEvent();\r\n        setTermInit(false);\r\n        postData();\r\n        // postStandBy();\r\n        console.log(\"Check\");\r\n    }\r\n    //스탑 버튼 이벤트\r\n    function btnStop() {\r\n        setIntervalMode(\"OFF\");\r\n        setTermIntervalMode(\"OFF\");\r\n\r\n        console.log(\"Stop\");\r\n    }\r\n    //기록 버튼 이벤트\r\n    function btnRecord() {\r\n\r\n    }\r\n\r\n    //텀 타이머값 초기화 함수\r\n    function btnTermTimeReset() {\r\n        setTermHour(0);\r\n        setTermMin(0);\r\n        setTermSec(0);\r\n        setTermMilSec(0);\r\n    }\r\n\r\n    //버튼그룹 VIEW\r\n    let buttonGroup = null;\r\n\r\n    if (intervalMode === \"OFF\") {\r\n        buttonGroup = <>\r\n            <Button value=\"RESET\" clickEvent={() => { btnReset() }} />\r\n            <Button value=\"START\" clickEvent={() => { btnStart() }} />\r\n        </>\r\n    } else if (intervalMode === \"ON\") {\r\n        buttonGroup = <>\r\n            <Button value=\"CHECK\" clickEvent={() => { btnCheck() }} />\r\n            <Button value=\"STOP\" clickEvent={() => { btnStop() }} />\r\n        </>\r\n    }\r\n\r\n    return (\r\n        <section id=\"timer\">\r\n            <h2 id=\"watch\" className={termInit === true ? 'watchInit' : 'started'}>\r\n                {timeView}\r\n            </h2>\r\n            <h3 id=\"subWatch\" className={termInit === true ? 'checkerInit' : 'started'}>\r\n                {timeTerm}\r\n            </h3>\r\n            <hgroup id=\"chkTitle\" className={termInit === true ? 'titleInit' : 'started flex'}>\r\n                <h4 className='kr'>구간</h4>\r\n                <h4 className='kr'>구간기록</h4>\r\n                <h4 className='kr'>전체시간</h4>\r\n            </hgroup>\r\n            <ul id=\"timeCheck\" className={termInit === true ? 'checkerInit' : 'started'}>\r\n                {timeCheck}\r\n            </ul>\r\n            <div id=\"btnGroup\">\r\n                {buttonGroup}\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default TimerStopWatch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}